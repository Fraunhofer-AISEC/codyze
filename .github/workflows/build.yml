name: build

on:
  push:
    branches:
      - main
    tags:
      - v**
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: 11
      - name: Determine Version
        run: |
          # determine version from tag
          export VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
          if [[ $VERSION != v* ]]
          then
            export VERSION=""
            echo "Building version-less (master or feature branch)"
          else
            # make version more Java-friendly by dropping the 'v'
            export VERSION=${VERSION:1:${#VERSION}}
            echo "Building as ${VERSION}"
          fi

          echo "##[set-output name=version;]$VERSION"
        id: determine_version
      - name: Build ${{ steps.determine_version.outputs.version }}
        run: |
          if [ "$SONAR_TOKEN" != "" ]
          then
            ./gradlew --parallel --no-daemon -Pversion=$VERSION :codyze-cli:build :codyze-cli:sonarqube \
            -Dsonar.projectKey=codyze \
            -Dsonar.organization=fraunhofer-aisec \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN
          else
            ./gradlew --parallel --no-daemon -Pversion=$VERSION :codyze-cli:build
          fi
        id: build
        env:
          VERSION: ${{ steps.determine_version.outputs.version }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Codecov
        uses: codecov/codecov-action@v3
      - name: Archive test reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: test
          path: codyze/build/reports/tests/test
      - name: Push Release Docker Image
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker build -t ghcr.io/fraunhofer-aisec/codyze:latest codyze-v2/
          docker tag ghcr.io/fraunhofer-aisec/codyze:latest ghcr.io/fraunhofer-aisec/codyze:$VERSION
          docker push ghcr.io/fraunhofer-aisec/codyze:$VERSION
          docker push ghcr.io/fraunhofer-aisec/codyze:latest
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          VERSION: ${{ steps.determine_version.outputs.version }}
      - name: "Create Release"
        if: startsWith(github.ref, 'refs/tags/v')
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.determine_version.outputs.version }}
          draft: false
          prerelease: false
      - name: "Upload Release Asset"
        if: startsWith(github.ref, 'refs/tags/v')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: codyze/build/distributions/codyze-${{ steps.determine_version.outputs.version }}.zip
          asset_name: codyze-${{ steps.determine_version.outputs.version }}.zip
          asset_content_type: application/zip
