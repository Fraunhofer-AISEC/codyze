# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#publishing-using-gradle

name: Gradle Package

on: push
  # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.12
      uses: actions/setup-java@v1
      with:
        java-version: 1.12
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Bulid and Publish artifact
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      # The GITHUB_REF tag comes in the format 'refs/tags/xxx'.
      # If we split on '/' and take the 3rd value,
      # we can get the release name.
      run: |
        NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
        echo "New version: ${NEW_VERSION}"
        echo "Github username: ${GITHUB_ACTOR}"
        gradle -Pversion=${NEW_VERSION} publish
    - name: Checkout code
      uses: actions/checkout@master
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Release of Codyze.
        draft: false
        prerelease: false