image: openjdk:11

services:
  - neo4j:3.5.3

stages:
  - build
  - push
  - deploy

variables:
  DOCKER_REGISTRY_URL: "registry.netsec.aisec.fraunhofer.de"
  PARENT_PROJECT_NAME: "cpg"

  # for the neo4j service
  NEO4J_AUTH: neo4j/password

  # for the cpg tests to find the neo4j service
  NEO4J_URI: bolt://neo4j

build:
  cache: {}
  stage: build
  variables:
    GRADLE_USER_HOME: "/cache/.gradle"
    GRADLE_OPTS: "-Dorg.gradle.daemon=false"
    PIP_CACHE_DIR: "/cache/.pip"
  tags:
    - docker
  before_script:
    - apt update && apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common
    - curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    - apt update && apt install -y docker-ce
    - cp sonar.crt /usr/local/share/ca-certificates/sonar.crt
    - update-ca-certificates
  script:
    # make sure the cached gradle directory exists
    - mkdir -p /cache/.gradle
    # build
    - echo $GRADLE_PROPERTIES > gradle.properties
    - ./gradlew --parallel --refresh-dependencies clean docker
  artifacts:
    when: always
    paths:
      - build/reports

push_as_is:
  image: docker
  stage: push
  tags:
    - docker  
  script:
    - docker push $DOCKER_REGISTRY_URL/$PARENT_PROJECT_NAME/$CI_PROJECT_NAME:${CI_COMMIT_SHA:0:8}
  only:
    - master
