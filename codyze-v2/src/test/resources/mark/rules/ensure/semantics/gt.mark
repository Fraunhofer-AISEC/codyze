package test.rules.semantics.comparison

entity A {}

rule Gt_1_false {
    using A as a
    ensure
        1 > 2
    onfail B
}

// Fails, as MARK does not parse negative values. -1 would need to be wrapped as "-1"
rule Gt_2_fail {
    using A as a
    ensure
        -1 > 0x2
    onfail B
}

rule Gt_4_false {
    using A as a
    ensure
        0 > "1"
    onfail B
}

rule Gt_5_false {
    using A as a
    ensure
        0 > "0.00001"
    onfail B
}

rule Gt_6_false {
    using A as a
    ensure
        2147483646 > 0x7fffffff
    onfail B
}

// Fails, as MARK parses numbers exclusively as integers. 1.009 would need to be wrapped as "1.009", otherwise it results in 1.
rule Gt_7_true {
    using A as a
    ensure
        "1.001" > 1.009
    onfail B
}

rule Gt_8_false {
    using A as a
    ensure
        "-1.0" > 2
    onfail B
}

rule Gt_9_true {
    using A as a
    ensure
        "1" > 0.0
    onfail B
}

rule Gt_10_false {
    using A as a
    ensure
        1 > 1
    onfail B
}
