version: "2.3"
services:
  java-scraper:
    build:
      context: ./github-downloader
      dockerfile: Dockerfile
    entrypoint: python3 -u
    command:  repo_scraper.py
    environment:
      - GITHUB_TOKEN
      - GITHUB_QUERY=${GITHUB_QUERY_JAVA}
      - GITHUB_URL_PREFIX=java
      - REPO_LIMIT
    depends_on:
      - redis
  cxx-scraper:
    build:
      context: ./github-downloader
      dockerfile: Dockerfile
    entrypoint: python3 -u
    command:  repo_scraper.py
    environment:
      - GITHUB_TOKEN
      - GITHUB_QUERY=${GITHUB_QUERY_CXX}
      - GITHUB_URL_PREFIX=cxx
      - REPO_LIMIT
    depends_on:
      - redis
  analyzer:
    build:
      context: ./analyzer
      dockerfile: Dockerfile
    entrypoint: java -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9010 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9010 -Djava.rmi.server.hostname=localhost -jar
    command:  /app/app.jar
    scale: 1
    environment:
      - ANALYSIS_TIMEOUT
      - OUTPUT_PATH
      - MARK_PATH
      - ANALYSIS_MODE
      - REDIS_HOST
    volumes:
      - ./logs:/logs
      - ./../../src/dist/mark:/mark
    depends_on:
      - redis
    ports:
      - "9010:9010"
  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"