package botan


/* InitializationVector can be Botan::OctetString - a class wrapping..
		- Botan::secure_vector 	(seems reasonable to allow)
		- uint8_t[]				(currently not allowed)
		- std::vector 			(currently not allowed)
		- std::string 			(currently not allowed)
	* Note: we only allow secure_vector for now, but this can be extended if the others are evaluated to be safe
*/
entity Botan.InitializationVector {
	
	var bytes;
	var rng: Botan.RNG;
	var length;

	op create {
		Botan::InitializationVector(bytes: Botan::secure_vector);
        Botan::InitializationVector(rng, length);
	}
	
	op get {
		Botan::InitializationVector::bits_of();
        Botan::InitializationVector::as_string();

        // because it's hard for us to analyze?
        forbidden Botan::InitializationVector::begin();
        forbidden Botan::InitializationVector::end();
	}

}

entity Botan.SymmetricKey {
	
	var bytes;
	var rng: Botan.RNG;
	var length;

	op create {
		Botan::SymmetricKey(bytes: Botan::secure_vector);
        Botan::SymmetricKey(rng, length);
	}
	
	op get {
		Botan::SymmetricKey::bits_of();
        Botan::SymmetricKey::as_string();

        // Note: because it's hard for us to analyze?
        forbidden Botan::SymmetricKey::begin();
        forbidden Botan::SymmetricKey::end();
	}

}

