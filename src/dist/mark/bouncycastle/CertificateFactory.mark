package java.jca

entity CertificateFactory {
	
	var type;
	var provider;
	
	var inStream;
	var certificate;
	
	var encoding;
	var certificates;
	var certpath;
	
	
	op instantiate {
		java.security.cert.CertificateFactory.getInstance(
			type : java.lang.String
		);
		java.security.cert.CertificateFactory.getInstance(
			type : java.lang.String,
			provider : java.lang.String | java.security.Provider
		);
	}
	
	op generateCertificate {
		certificate = java.security.cert.CertificateFactory.generateCertificate(
			inStream : java.io.InputStream
		);
		certificates = java.security.cert.CertificateFactory.generateCertificates( // TODO how to denote that this returns Collection<? extends Certificate>
			inStream : java.io.InputStream
		);
	}
	
	op generateCertPath {
		certpath = java.security.cert.CertificateFactory.generateCertPath(
			inStream : java.io.InputStream
		);
		certificates = java.security.cert.CertificateFactory.generateCertPath(
			inStream : java.io.InputStream,
			encoding : java.lang.String
		);
		certificates = java.security.cert.CertificateFactory.generateCertPath(
			certificates : List/* <? extends Certificate> */ // TODO how to handle generic list? what is actually seen by cpg
		);
	}
	
	op generateCRL {
		certificate = java.security.cert.CertificateFactory.generateCRL(
			inStream : java.io.InputStream
		);
		certificates = java.security.cert.CertificateFactory.generateCRLs( // TODO how to denote that this returns Collection<? extends CRL>
			inStream : java.io.InputStream
		);
	}
}