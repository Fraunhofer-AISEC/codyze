package java.jca

entity KeyAgreement {
    
    var algorithm;
    var provider;
    
    var key;
    var random;
    var params;
    
    op instantiate {
        javax.crypto.KeyAgreement.getInstance(
            algorithm : java.lang.String
        );
        javax.crypto.KeyAgreement.getInstance(
            algorithm : java.lang.String,
            provider : java.lang.String | java.security.Provider
        );
    }
    
    op initialize {
        javax.crypto.KeyAgreement.init(
            key : java.security.Key
        );
        javax.crypto.KeyAgreement.init(
            key : java.security.Key,
            random : java.security.SecureRandom
        );
        javax.crypto.KeyAgreement.init(
            key : java.security.Key,
            params : java.security.spec.AlgorithmParameterSpec
        );
        javax.crypto.KeyAgreement.init(
            key : java.security.Key,
            params : java.security.spec.AlgorithmParameterSpec,
            random : java.security.SecureRandom
        );
    }
    
    op doPhase {
        javax.crypto.KeyAgreement.doPhase(
            key : java.security.Key,
            lastPhase : boolean
        );
    }
    
    op generate {
        javax.crypto.KeyAgreement.generateSecret();
        javax.crypto.KeyAgreement.generateSecret(
            sharedSecret : byte[],
            _
        );
        javax.crypto.KeyAgreement.generateSecret(
            algorithm : java.lang.String
        );
    }
}
