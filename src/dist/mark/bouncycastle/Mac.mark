package java.jca

/*
 * Represents javax.crypto.Mac
 */
entity Mac {
    
    var algorithm;
    var provider;
    var key;
    var params;
    var input;
    var output;
    
    op instantiate {
        javax.crypto.Mac.getInstance(algorithm : java.lang.String);
        javax.crypto.Mac.getInstance(
            algorithm : java.lang.String,
            provider : java.lang.String | java.security.Provider
        );
    }
    
    op init {
        javax.crypto.Mac.init(key : java.security.Key);
        javax.crypto.Mac.init(
            key : java.security.Key,
            params : java.security.spec.AlgorithmParameterSpec
        );
    }
    
    op update {
        javax.crypto.Mac.update(input : byte | byte[] | java.nio.ByteBuffer);
        javax.crypto.Mac.update(input : byte[], ...);
    }
    
    op finalize {
        output = javax.crypto.Mac.doFinal();
        output = javax.crypto.Mac.doFinal(input : byte[]);
        javax.crypto.Mac.doFinal(output : byte[], _);
    }
    
    op reset {
        javax.crypto.Mac.reset();
    }
    
}