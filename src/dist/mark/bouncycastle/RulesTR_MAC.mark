package rules.bsi.tr_02102_1.v2019_01

/**
 * BSI TR-02102-1 (Version 2019-01), 5.3. Message Authentication Code (MAC)
 * - MAC algorithms
 */
rule ID_5_3_01 {
    using
        Mac as m
    ensure
        m.algorithm in [
            "AESCMAC", // CMACs
            "HMACSHA256", "HMACSHA512/256", "HMACSHA384", "HMACSHA512", "HMACSHA3-256", "HMACSHA3-384", "HMACSHA3-512", // HMACs
            "AES-GMAC" // GMACs
        ]
    onfail
        InvalidMACAlgorithm
}


/**
 * BSI TR-02102-1 (Version 2019-01), 5.3. Message Authentication Code (MAC)
 * - CMAC minimum key length
 */
rule ID_5_3_02_CMAC_Keygen {
    using
        Mac as m,
        KeyGenerator as kg
    when
        m.algorithm in ["AESCMAC"]
        && _is(m.key, kg.key)
    ensure
        // find a keygenerator of sufficient size
        _is(m.key, kg.key)
        && kg.keysize >= 128
    onfail
        InsufficientCMACKeyLength
}

/**
 * BSI TR-02102-1 (Version 2019-01), 5.3. Message Authentication Code (MAC)
 * - CMAC minimum key length
 */
rule ID_5_3_02_CMAC_HMAC_SecretKeyFactory {
    using
        Mac as m,
        SecretKeySpec as sks,
        SecretKeyFactory as kf
    when
        m.algorithm in ["AESCMAC"]
        && _is(m.key, kf.outkey)
    ensure
        // find a keygenerator of sufficient size
        _is(m.key, kf.outkey)
        && _is(kf.keyspec, sks)
        && (
            (_has_value(sks.len) && sks.len >= 128)
            || (!(_has_value(sks.len)) && _has_value(sks.key) && _length(sks.key) >= 16)
        )
    onfail
        InsufficientCMACKeyLength
}

/**
 * BSI TR-02102-1 (Version 2019-01), 5.3. Message Authentication Code (MAC)
 * - HMAC minimum key length
 */
rule ID_5_3_02_HMAC_Keygen {
    using
        Mac as m,
        KeyGenerator as kg
    when
        m.algorithm in ["HMACSHA256", "HMACSHA512/256", "HMACSHA384", "HMACSHA512", "HMACSHA3-256", "HMACSHA3-384", "HMACSHA3-512"]
        && _is(m.key, kg.key)
    ensure
        // find a keygenerator of sufficient size
        (
            _is(m.key, kg.key)
            && kg.keysize >= 128
        )
        || (
             _is(m.key, kg.key)
             && kg.algorithm == m.algorithm
        )
    onfail
        InsufficientHMACKeyLength
}

/**
 * BSI TR-02102-1 (Version 2019-01), 5.3. Message Authentication Code (MAC)
 * - HMAC minimum key length
 */
rule ID_5_3_02_HMAC_SecretKeyFactory {
    using
        Mac as m,
        SecretKeySpec as sks,
        SecretKeyFactory as kf
    when
        m.algorithm in ["HMACSHA256", "HMACSHA512/256", "HMACSHA384", "HMACSHA512", "HMACSHA3-256", "HMACSHA3-384", "HMACSHA3-512"]
        && _is(m.key, kf.outkey)
        && _is(kf.keyspec, sks)
    ensure
        (
            _is(m.key, kf.outkey)
            && _is(kf.keyspec, sks)
            && (
                (_has_value(sks.len) && sks.len >= 128)
                || (!(_has_value(sks.len)) && _has_value(sks.key) && _length(sks.key) >= 16)
            )
        )
    onfail
        InsufficientHMACKeyLength
}

/**
 * BSI TR-02102-1 (Version 2019-01), 5.3. Message Authentication Code (MAC)
 * - GMAC minimum key length
 */
rule ID_5_3_02_GMAC {
    using
        Mac as m,
        KeyGenerator as kg,
        SecretKeySpec as sks,
        SecretKeyFactory as kf
    when
        m.algorithm in ["AES-GMAC"] && ( _is(m.key, kg.key)
        || ( _is(m.key, kf.outkey) && _is(kf.keyspec, sks) ) )
    ensure
        // find a keygenerator of sufficient size
        && kg.keysize >= 128
        || (_has_value(sks.len) && sks.len >= 128)
        || (!(_has_value(sks.len)) && _has_value(sks.key) && _length(sks.key) >= 16)
    onfail
        InsufficientGMACKeyLength
}


/**
 * BSI TR-02102-1 (Version 2019-01), 5.3. Message Authentication Code (MAC)
 * - MAC minimum length of authentication tag
 */
rule ID_5_3_03_CMAC {
    using
        Mac as m
    when
        m.algorithm in ["AESCMAC"]
    ensure
        // TODO check in future releases of Bouncy Castle
        true // Bouncy Castle implementation uses block size of AES in bits (128) by default
    onfail
        InsufficientCMACTagLength
}

/**
* BSI TR-02102-1 (Version 2019-01), 5.3. Message Authentication Code (MAC)
 * - HMAC minimum length of authentication tag
 */
rule ID_5_3_03_HMAC {
    using
        Mac as m,
        HMACParameterSpec as spec
    when
        m.algorithm in ["HMACSHA256", "HMACSHA512/256", "HMACSHA384", "HMACSHA512", "HMACSHA3-256", "HMACSHA3-384", "HMACSHA3-512"]
        && _is(m.params, spec)
    ensure
        _is(m.params, spec)
        && spec.outputLength >= 96
    onfail
        InsufficientHMACTagLength
}

/**
* BSI TR-02102-1 (Version 2019-01), 5.3. Message Authentication Code (MAC)
 * - GMAC minimum length of authentication tag
 */
rule ID_5_3_03_GMAC {
    using
        Mac as m
    when
        m.algorithm in ["AES-GMAC"]
    ensure
        // TODO check in future releases of Bouncy Castle
        true // Bouncy Castle uses 128 bits by default
    onfail
        InsufficientGMACTagLength
}

