package java.jca

entity SecureRandom {
    
    var algorithm;
    var provider;
    var params;
    var seed;
    var numBytes;
    var randomBytes;
    
    op instantiate {
        java.security.SecureRandom.getInstance(algorithm : java.lang.String);
        java.security.SecureRandom.getInstance(
            algorithm : java.lang.String,
            provider : java.lang.String | java.security.Provider
        );
        java.security.SecureRandom.getInstance(
            algorithm : java.lang.String,
            params : java.security.SecureRandomParameters
        );
        java.security.SecureRandom.getInstance(
            algorithm : java.lang.String,
            params : java.security.SecureRandomParameters,
            provider : java.lang.String | java.security.Provider
        );
        java.security.SecureRandom.getInstanceStrong();
        
        // forbidden calls because they don't respect BC as provider
        forbidden java.security.SecureRandom();
        forbidden java.security.SecureRandom(
            seed : byte[]
        );
    }
    
    op seed {
        java.security.SecureRandom.setSeed(seed : byte[] | long);
    }
    
    op reseed {
        java.security.SecureRandom.reseed();
        java.security.SecureRandom.reseed(params : java.security.SecureRandomParameters);
    }
    
    op generateSeed {
        seed = java.security.SecureRandom.generateSeed(numBytes : int);
    }
    
    op generate {
        java.security.SecureRandom.next(numBytes : int);
        java.security.SecureRandom.nextBytes(randomBytes : bytes[]);
        java.security.SecureRandom.nextBytes(
            randomBytes : bytes[],
            params : java.security.SecureRandomParameters
        );
    }
    
}