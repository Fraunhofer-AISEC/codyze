package test.rules.semantics.comparison

entity A {}

rule Lt_1_true {
    using A as a
    ensure
        1 < 2
    onfail B
}

// Fails, as MARK does not parse negative values. -1 would need to be wrapped as "-1"
rule Lt_2_fail {
    using A as a
    ensure
        -1 < 0x2
    onfail B
}

rule Lt_4_true {
    using A as a
    ensure
        0 < "1"
    onfail B
}

rule Lt_5_true {
    using A as a
    ensure
        0 < "0.00001"
    onfail B
}

rule Lt_6_true {
    using A as a
    ensure
        2147483646 < 0x7fffffff
    onfail B
}

// Fails, as MARK parses numbers exclusively as integers. 1.009 would need to be wrapped as "1.009", otherwise it results in 1.
rule Lt_7_false {
    using A as a
    ensure
        "1.001" < 1.009
    onfail B
}

rule Lt_8_true {
    using A as a
    ensure
        "-1.0" < 2
    onfail B
}

rule Lt_9_false {
    using A as a
    ensure
        "1" < 0.0
    onfail B
}

rule Lt_10_false {
    using A as a
    ensure
        1 < 1
    onfail B
}
