entity Order isa Cipher {
	var nonce : int;
	var nonce_length : int;
	var iv : int;
	var myValue : int;

	op create() {
        Botan::get_cipher_mode(_, _);
	}

	op init() {
        Botan::set_key(_);
		myValue = Botan::random_vec(_);
        Botan::set_key(_, _);
	}

	op start() {
        Botan::start(iv);

    	Botan::start();
    	Botan::start(_);
        Botan::start(nonce, _);
        Botan::start_msg(*);
	}
	op finish() {
        Botan::finish(_)
    }
}

rule UseOfBotan_CipherMode {
	using Order as cm
	ensure
		order cm.start(), cm.finish()
	onfail WrongUseOfBotan_CipherMode
}

//rule UseOfBotan_CipherMode {
//	using Order as cm
//	ensure
//		order cm.create(), cm.init(), (cm.start(), cm.process()*, cm.finish())+, cm.reset()?
//	onfail WrongUseOfBotan_CipherMode
//}